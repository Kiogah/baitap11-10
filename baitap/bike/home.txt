import React, { useReducer, useState } from 'react';
import { View, Text, Image, TouchableOpacity, FlatList, StyleSheet } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import { bikeReducer, initialBikes } from './bikeReducer';

const BikeListScreen = () => {
  const [bikes, dispatch] = useReducer(bikeReducer, initialBikes);
  const [selectedType, setSelectedType] = useState('All');
  const navigation = useNavigation();

  const filterBikes = selectedType === 'All' ? bikes : bikes.filter(bike => bike.type === selectedType);

  const handleAddBike = newBike => {
    dispatch({ type: 'ADD_BIKE', payload: newBike });
  };

  const handleDeleteBike = bikeId => {
    dispatch({ type: 'DELETE_BIKE', payload: { id: bikeId } });
  };

  const handleEditBike = updatedBike => {
    dispatch({ type: 'EDIT_BIKE', payload: updatedBike });
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>The world's Best Bike</Text>
      
      <View style={styles.filterContainer}>
        {['All', 'Roadbike', 'Mountain'].map(type => (
          <TouchableOpacity key={type} style={[styles.filterButton, selectedType === type && styles.activeFilterButton]} onPress={() => setSelectedType(type)}>
            <Text style={[styles.filterText, selectedType === type && styles.activeFilterText]}>{type}</Text>
          </TouchableOpacity>
        ))}
      </View>

      <FlatList
        data={filterBikes}
        keyExtractor={item => item.id}
        numColumns={2}
        renderItem={({ item }) => (
          <View style={styles.bikeCard}>
            <Image source={item.image} style={styles.bikeImage} />
            <Text style={styles.bikeName}>{item.name}</Text>
            <Text style={styles.bikePrice}>${item.price}</Text>
            <TouchableOpacity onPress={() => handleDeleteBike(item.id)}>
              <Text style={styles.deleteText}>Delete</Text>
            </TouchableOpacity>
            <TouchableOpacity onPress={() => navigation.navigate('EditBikeScreen', { bike: item, onEditBike: handleEditBike })}>
              <Text style={styles.editText}>Edit</Text>
            </TouchableOpacity>
          </View>
        )}
      />

      <TouchableOpacity
        style={styles.addButton}
        onPress={() => navigation.navigate('AddBikeScreen', { onAddBike: handleAddBike })}
      >
        <Text style={styles.addButtonText}>Add New Bike</Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f5f5f5',
    padding: 16,
  },
  title: {
    fontSize: 24,
    fontWeight: '700',
    color: '#e53935',
    marginBottom: 16,
    textAlign: 'center',
  },
  filterContainer: {
    flexDirection: 'row',
    justifyContent: 'center',
    marginBottom: 16,
  },
  filterButton: {
    paddingVertical: 8,
    paddingHorizontal: 16,
    backgroundColor: '#fce4ec',
    borderRadius: 20,
    marginHorizontal: 5,
  },
  activeFilterButton: {
    backgroundColor: '#ffebee',
    borderColor: '#e53935',
    borderWidth: 1,
  },
  filterText: {
    fontSize: 14,
    color: '#000',
  },
  activeFilterText: {
    color: '#e53935',
    fontWeight: '600',
  },
  bikeCard: {
    flex: 1,
    backgroundColor: '#fff3e0',
    padding: 16,
    borderRadius: 16,
    alignItems: 'center',
    margin: 8,
  },
  bikeImage: {
    width: 100,
    height: 80,
    marginBottom: 8,
  },
  bikeName: {
    fontSize: 16,
    fontWeight: '500',
    marginBottom: 4,
  },
  bikePrice: {
    fontSize: 14,
    color: '#e53935',
    fontWeight: '700',
  },
  deleteText: {
    color: 'red',
    fontSize: 12,
    marginTop: 4,
  },
  editText: {
    color: 'blue',
    fontSize: 12,
    marginTop: 4,
  },
  addButton: {
    backgroundColor: '#e53935',
    padding: 16,
    borderRadius: 20,
    alignItems: 'center',
    marginTop: 16,
  },
  addButtonText: {
    color: '#fff',
    fontSize: 16,
  },
});

export default BikeListScreen;
